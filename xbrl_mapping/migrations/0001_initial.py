# Generated by Django 5.1.7 on 2025-03-24 12:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FilingInformation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                ("unique_entity_number", models.CharField(max_length=10, unique=True)),
                ("current_period_start", models.CharField(max_length=10)),
                ("current_period_end", models.CharField(max_length=10)),
                (
                    "prior_period_start",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "xbrl_filing_type",
                    models.CharField(
                        choices=[("Full", "Full"), ("Partial", "Partial")],
                        max_length=10,
                    ),
                ),
                (
                    "financial_statement_type",
                    models.CharField(
                        choices=[
                            ("Company", "Company"),
                            ("Consolidated", "Consolidated"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "accounting_standard",
                    models.CharField(
                        choices=[
                            ("SFRS", "SFRS"),
                            ("SFRS for SE", "SFRS for SE"),
                            ("IFRS", "IFRS"),
                            ("Other", "Other"),
                        ],
                        db_column="accounting_standard",
                        max_length=15,
                    ),
                ),
                ("authorisation_date", models.CharField(max_length=10)),
                (
                    "financial_position_type",
                    models.CharField(
                        choices=[
                            ("Classified", "Classified"),
                            ("Liquidity-based", "Liquidity-based"),
                        ],
                        max_length=15,
                    ),
                ),
                ("is_going_concern", models.BooleanField(db_column="is_going_concern")),
                ("has_comparative_changes", models.BooleanField()),
                ("presentation_currency", models.CharField(max_length=255)),
                ("functional_currency", models.CharField(max_length=255)),
                (
                    "rounding_level",
                    models.CharField(
                        choices=[
                            ("Thousands", "Thousands"),
                            ("Millions", "Millions"),
                            ("Units", "Units"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "entity_operations_description",
                    models.TextField(db_column="entity_operations_description"),
                ),
                ("principal_place_of_business", models.CharField(max_length=255)),
                ("has_more_than_50_employees", models.BooleanField()),
                (
                    "parent_entity_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ultimate_parent_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("taxonomy_version", models.CharField(default="2022.2", max_length=10)),
                ("xbrl_software", models.CharField(max_length=255)),
                (
                    "xbrl_preparation_method",
                    models.CharField(
                        choices=[
                            ("Automated", "Automated"),
                            ("Manual", "Manual"),
                            ("Hybrid", "Hybrid"),
                        ],
                        max_length=15,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditReport",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "audit_opinion",
                    models.CharField(
                        choices=[
                            ("Unqualified", "Unqualified"),
                            ("Qualified", "Qualified"),
                            ("Adverse", "Adverse"),
                            ("Disclaimer", "Disclaimer"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "auditing_standards",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "material_uncertainty_going_concern",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "proper_accounting_records",
                    models.BooleanField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CurrentAssets",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("cash_and_bank_balances", models.FloatField(blank=True, null=True)),
                (
                    "trade_and_other_receivables",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "current_finance_lease_receivables",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "current_derivative_financial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "current_financial_assets_at_fair_value",
                    models.FloatField(
                        blank=True,
                        db_column="current_financial_assets_at_fair_value",
                        null=True,
                    ),
                ),
                (
                    "other_current_financial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                ("development_properties", models.FloatField(blank=True, null=True)),
                ("inventories", models.FloatField(blank=True, null=True)),
                (
                    "other_current_nonfinancial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "held_for_sale_assets",
                    models.FloatField(
                        blank=True, db_column="held_for_sale_assets", null=True
                    ),
                ),
                ("total_current_assets", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="CurrentLiabilities",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("trade_and_other_payables", models.FloatField(blank=True, null=True)),
                (
                    "current_loans_and_borrowings",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "current_financial_liabilities_at_fair_value",
                    models.FloatField(
                        blank=True,
                        db_column="current_financial_liabilities_at_fair_value",
                        null=True,
                    ),
                ),
                (
                    "current_finance_lease_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_current_financial_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "current_income_tax_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                ("current_provisions", models.FloatField(blank=True, null=True)),
                (
                    "other_current_nonfinancial_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                ("liabilities_held_for_sale", models.FloatField(blank=True, null=True)),
                ("total_current_liabilities", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="DirectorsStatement",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "directors_opinion_true_fair_view",
                    models.BooleanField(db_column="directors_opinion_true_fair_view"),
                ),
                (
                    "reasonable_grounds_company_debts",
                    models.BooleanField(db_column="reasonable_grounds_company_debts"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Equity",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("share_capital", models.FloatField()),
                ("treasury_shares", models.FloatField(blank=True, null=True)),
                ("accumulated_profits_losses", models.FloatField()),
                ("other_reserves", models.FloatField(blank=True, null=True)),
                ("noncontrolling_interests", models.FloatField(blank=True, null=True)),
                ("total_equity", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="IncomeStatement",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("revenue", models.FloatField(blank=True, null=True)),
                ("other_income", models.FloatField(blank=True, null=True)),
                ("employee_expenses", models.FloatField(blank=True, null=True)),
                ("depreciation_expense", models.FloatField(blank=True, null=True)),
                ("amortisation_expense", models.FloatField(blank=True, null=True)),
                (
                    "repairs_and_maintenance_expense",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "sales_and_marketing_expense",
                    models.FloatField(blank=True, null=True),
                ),
                ("other_expenses_by_nature", models.FloatField(blank=True, null=True)),
                ("other_gains_losses", models.FloatField(blank=True, null=True)),
                ("finance_costs", models.FloatField(blank=True, null=True)),
                (
                    "share_of_profit_loss_of_associates_and_joint_ventures_accounted_for_using_equity_method",
                    models.FloatField(
                        blank=True,
                        db_column="profit_loss_associates_equity_method",
                        null=True,
                    ),
                ),
                (
                    "profit_loss_before_taxation",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "tax_expense_benefit_continuing_operations",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "profit_loss_from_discontinued_operations",
                    models.FloatField(blank=True, null=True),
                ),
                ("profit_loss", models.FloatField()),
                (
                    "profit_loss_attributable_to_owners_of_company",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "profit_loss_attributable_to_noncontrolling_interests",
                    models.FloatField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NonCurrentAssets",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "trade_and_other_receivables",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "noncurrent_finance_lease_receivables",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "noncurrent_derivative_financial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "noncurrent_financial_assets_at_fair_value",
                    models.FloatField(
                        blank=True,
                        db_column="noncurrent_financial_assets_at_fair_value",
                        null=True,
                    ),
                ),
                (
                    "other_noncurrent_financial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                ("property_plant_equipment", models.FloatField(blank=True, null=True)),
                ("investment_properties", models.FloatField(blank=True, null=True)),
                ("goodwill", models.FloatField(blank=True, null=True)),
                ("intangible_assets", models.FloatField(blank=True, null=True)),
                ("investments_in_entities", models.FloatField(blank=True, null=True)),
                ("deferred_tax_assets", models.FloatField(blank=True, null=True)),
                (
                    "other_noncurrent_nonfinancial_assets",
                    models.FloatField(blank=True, null=True),
                ),
                ("total_noncurrent_assets", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="NonCurrentLiabilities",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("trade_and_other_payables", models.FloatField(blank=True, null=True)),
                (
                    "noncurrent_loans_and_borrowings",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "noncurrent_financial_liabilities_at_fair_value",
                    models.FloatField(
                        blank=True,
                        db_column="noncurrent_financial_liabilities_at_fair_value",
                        null=True,
                    ),
                ),
                (
                    "noncurrent_finance_lease_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_noncurrent_financial_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                ("deferred_tax_liabilities", models.FloatField(blank=True, null=True)),
                ("noncurrent_provisions", models.FloatField(blank=True, null=True)),
                (
                    "other_noncurrent_nonfinancial_liabilities",
                    models.FloatField(blank=True, null=True),
                ),
                ("total_noncurrent_liabilities", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Revenue",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "revenue_from_property_point_in_time",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "revenue_from_goods_point_in_time",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "revenue_from_services_point_in_time",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "revenue_from_property_over_time",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "revenue_from_construction_over_time",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "revenue_from_services_over_time",
                    models.FloatField(blank=True, null=True),
                ),
                ("other_revenue", models.FloatField(blank=True, null=True)),
                ("total_revenue", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="TradeAndOtherPayables",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="payables",
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "payables_to_third_parties",
                    models.FloatField(
                        blank=True, help_text="Payables to third parties", null=True
                    ),
                ),
                (
                    "payables_to_related_parties",
                    models.FloatField(
                        blank=True, help_text="Payables to related parties", null=True
                    ),
                ),
                (
                    "deferred_income",
                    models.FloatField(
                        blank=True,
                        help_text="Deferred income. Common terms: unearned revenue, contract liabilities",
                        null=True,
                    ),
                ),
                (
                    "other_payables",
                    models.FloatField(
                        blank=True, help_text="Other payables", null=True
                    ),
                ),
                (
                    "total_trade_and_other_payables",
                    models.FloatField(help_text="Total trade and other payables"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TradeAndOtherReceivables",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="receivables",
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "receivables_from_third_parties",
                    models.FloatField(
                        blank=True,
                        help_text="Receivables from third parties. Common terms: third party receivables, external receivables",
                        null=True,
                    ),
                ),
                (
                    "receivables_from_related_parties",
                    models.FloatField(
                        blank=True,
                        help_text="Receivables from related parties. Common terms: related party receivables, intercompany receivables",
                        null=True,
                    ),
                ),
                (
                    "unbilled_receivables",
                    models.FloatField(
                        blank=True,
                        help_text="Unbilled receivables. Common terms: contract assets, accrued income, work completed not billed",
                        null=True,
                    ),
                ),
                (
                    "other_receivables",
                    models.FloatField(
                        blank=True,
                        help_text="Other receivables. Common terms: sundry receivables, miscellaneous receivables, deposits",
                        null=True,
                    ),
                ),
                (
                    "total_trade_and_other_receivables",
                    models.FloatField(
                        help_text="Total trade and other receivables. Common terms: accounts receivable, debtors, total receivables"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notes",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "revenue",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes_revenue",
                        to="xbrl_mapping.revenue",
                    ),
                ),
                (
                    "trade_and_other_payables",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes_payables",
                        to="xbrl_mapping.tradeandotherpayables",
                    ),
                ),
                (
                    "trade_and_other_receivables",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes_receivables",
                        to="xbrl_mapping.tradeandotherreceivables",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatementOfFinancialPosition",
            fields=[
                (
                    "filing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                ("total_assets", models.FloatField()),
                ("total_liabilities", models.FloatField()),
                (
                    "current_assets",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.currentassets",
                    ),
                ),
                (
                    "current_liabilities",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.currentliabilities",
                    ),
                ),
                (
                    "equity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.equity",
                    ),
                ),
                (
                    "noncurrent_assets",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.noncurrentassets",
                    ),
                ),
                (
                    "noncurrent_liabilities",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.noncurrentliabilities",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PartialXBRL",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "filing_information",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.filinginformation",
                    ),
                ),
                (
                    "audit_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.auditreport",
                    ),
                ),
                (
                    "directors_statement",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.directorsstatement",
                    ),
                ),
                (
                    "income_statement",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.incomestatement",
                    ),
                ),
                (
                    "notes",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.notes",
                    ),
                ),
                (
                    "statement_of_financial_position",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="xbrl_mapping.statementoffinancialposition",
                    ),
                ),
            ],
        ),
    ]
